==================================
MongoDBCollection::createIndexes()
==================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Definition
----------

.. phpmethod:: MongoDB\\Collection::createIndexes($indexes)

   Create one or more indexes for the collection.

   .. code-block:: php

      function createIndexes(array $indexes): string[]

   ``createIndex()`` has one parameter, ``$indexes``, which is an array. Each
   element in ``$indexes`` must itself be an array that specifies an index. The
   specification array requires a ``key`` field, which corresponds to the
   ``$key`` parameter of :phpmethod:`MongoDB\\Collection::createIndex()`, and
   may have other fields that correspond to options of
   :phpmethod:`MongoDB\\Collection::createIndex()`.

   For example, the following ``$indexes`` parameter creates two indexes. The
   first is an ascending unique index on the ``username`` field and the second
   is a 2dsphere index on the ``loc`` field with a custom name::

      [
          [ 'key' => [ 'username' => 1 ], 'unique' => true ],
          [ 'key' => [ 'loc' => '2dsphere' ], 'name' => 'geo_index' ],
      ]

   You can specify any index options that your MongoDB version
   supports. MongoDB 3.2 includes the following options:

   .. include:: /includes/apiargs/MongoDBCollection-method-createIndex-option.rst

   For a full list of the supported index creation options, refer to the
   :manual:`createIndexes </reference/command/createIndexes>` command reference
   in the MongoDB manual.

   :returns:

      The names of the created indexes as an array of strings.

Example
-------

The following example creates two indexes on the ``restaurants`` collection in
the ``example`` database. One index is a compound index on the ``borough`` and
``cuisine`` fields and the other is 2dsphere index on the ``loc`` field with a
custom name.

.. code-block:: php

   <?php

   $collection = (new MongoDB\Client)->selectCollection('example', 'restaurants');

   $indexNames = $collection->createIndexes([
       [ 'key' => [ 'borough' => 1, 'cuisine' => 1] ],
       [ 'key' => [ 'loc' => '2dsphere'], 'name' => 'geo_index' ],
   ]);

   var_dump($indexNames);

The output would then resemble::

   array(2) {
     [0]=>
     string(19) "borough_1_cuisine_1"
     [1]=>
     string(9) "geo_index"
   }

.. seealso::

   - :phpmethod:`MongoDB\\Collection::createIndex()`
   - :doc:`/tutorial/indexes`
   - :manual:`createIndexes </reference/command/createIndexes>` command
     reference in the MongoDB manual
   - :manual:`Index </indexes>` documentation in the MongoDB Manual
